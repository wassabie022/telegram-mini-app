import { CancelablePromise, ExecuteWithOptions } from '@telegram-apps/bridge';
/**
 * Deletes specified key or keys from the cloud storage.
 * @param keyOrKeys - key or keys to delete.
 * @param options - request execution options.
 */
export declare function deleteItem(keyOrKeys: string | string[], options?: ExecuteWithOptions): CancelablePromise<void>;
/**
 * @param keys - keys list.
 * @param options - request execution options.
 * @returns Map, where a key is one of the specified in the `keys` argument, and a value is
 * a corresponding storage value.
 */
export declare function getItem<K extends string>(keys: K[], options?: ExecuteWithOptions): CancelablePromise<Record<K, string>>;
/**
 * @param key - cloud storage key.
 * @param options - request execution options.
 * @return Value of the specified key. If the key was not created previously, the function
 * will return an empty string.
 */
export declare function getItem(key: string, options?: ExecuteWithOptions): CancelablePromise<string>;
/**
 * Returns a list of all keys presented in the cloud storage.
 * @param options - request execution options.
 */
export declare function getKeys(options?: ExecuteWithOptions): CancelablePromise<string[]>;
/**
 * @returns True if the cloud storage is supported.
 */
export declare function isSupported(): boolean;
/**
 * Saves specified value by key.
 * @param key - storage key.
 * @param value - storage value.
 * @param options - request execution options.
 */
export declare function setItem(key: string, value: string, options?: ExecuteWithOptions): CancelablePromise<void>;
