{"version":3,"file":"index.js","sources":["../../transformers/dist/index.js","../src/env/hasWebviewProxy.ts","../src/env/isIframe.ts","../../toolkit/dist/index.js","../../signals/dist/index.js","../src/debug.ts","../src/events/transformers.ts","../src/events/listening/lastEvent.ts","../src/events/listening/signalFor.ts","../src/events/listening/on.ts","../src/errors.ts","../src/methods/$targetOrigin.ts","../src/methods/postEvent.ts","../src/utils/request.ts","../src/launch-params/parseLaunchParams.ts","../src/launch-params/retrieveFromUrl.ts","../src/launch-params/retrieveFromLocation.ts","../src/launch-params/retrieveFromPerformance.ts","../src/launch-params/storage.ts","../src/launch-params/retrieveLaunchParams.ts","../src/env/isTMA.ts","../src/events/emitMiniAppsEvent.ts","../src/env/mockTelegramEnv.ts","../src/events/handling/defineEventHandlers.ts","../src/events/handling/removeEventHandlers.ts","../src/events/listening/off.ts","../src/events/listening/subscribe.ts","../src/events/listening/unsubscribe.ts","../src/methods/captureSameReq.ts","../src/utils/compareVersions.ts","../src/methods/supports.ts","../src/methods/createPostEvent.ts","../src/utils/invokeCustomMethod.ts","../src/resetPackageState.ts"],"sourcesContent":["class i extends Error {\n  constructor(e, r, a) {\n    super(\n      typeof r == \"object\" ? r.message : r || e,\n      {\n        cause: typeof r == \"object\" ? r.cause : a\n      }\n    ), this.type = e, Object.setPrototypeOf(this, i.prototype);\n  }\n}\nfunction b(t) {\n  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction E(t) {\n  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\nconst R = \"ERR_INVALID_VALUE\", S = \"ERR_UNEXPECTED_VALUE\", w = \"ERR_UNEXPECTED_TYPE\", h = \"ERR_PARSE\";\nfunction y(t, e) {\n  const r = {};\n  for (const a in t) {\n    const n = t[a];\n    if (!n)\n      continue;\n    let o, c;\n    typeof n == \"function\" ? (o = a, c = n) : [o, c] = n;\n    try {\n      const p = c(e(o));\n      p !== void 0 && (r[a] = p);\n    } catch (p) {\n      throw new i(\n        h,\n        `Parser for \"${a}\" property failed${o === a ? \"\" : `. Source field: \"${o}\"`}`,\n        p\n      );\n    }\n  }\n  return r;\n}\nfunction d(t) {\n  let e = t;\n  if (typeof e == \"string\")\n    try {\n      e = JSON.parse(e);\n    } catch (r) {\n      throw new i(R, { cause: r });\n    }\n  if (typeof e != \"object\" || !e || Array.isArray(e))\n    throw new i(S);\n  return e;\n}\nfunction s(t, e) {\n  return (r) => {\n    const a = (n) => {\n      if (!(r && n === void 0))\n        try {\n          return e(n);\n        } catch (o) {\n          throw new i(h, {\n            message: `\"${t}\" transformer failed to parse the value`,\n            cause: o\n          });\n        }\n    };\n    return /* @__PURE__ */ Object.assign(\n      a,\n      {\n        isValid(n) {\n          try {\n            return a(n), !0;\n          } catch {\n            return !1;\n          }\n        }\n      }\n    );\n  };\n}\nfunction l(t, e) {\n  return s(e || \"object\", (r) => {\n    const a = d(r);\n    return y(t, (n) => a[n]);\n  });\n}\nfunction f(t) {\n  throw new i(w, `Unexpected value received: ${JSON.stringify(t)}`);\n}\nconst A = s(\"boolean\", (t) => {\n  if (typeof t == \"boolean\")\n    return t;\n  const e = String(t);\n  if (e === \"1\" || e === \"true\")\n    return !0;\n  if (e === \"0\" || e === \"false\")\n    return !1;\n  f(t);\n}), u = s(\"string\", (t) => {\n  if (typeof t == \"string\" || typeof t == \"number\")\n    return t.toString();\n  f(t);\n}), g = s(\"number\", (t) => {\n  if (typeof t == \"number\")\n    return t;\n  if (typeof t == \"string\") {\n    const e = Number(t);\n    if (!Number.isNaN(e))\n      return e;\n  }\n  f(t);\n}), D = s(\"date\", (t) => t instanceof Date ? t : new Date(g()(t) * 1e3));\nfunction P(t, e) {\n  return s(e || \"searchParams\", (r) => {\n    typeof r != \"string\" && !(r instanceof URLSearchParams) && f(r);\n    const a = typeof r == \"string\" ? new URLSearchParams(r) : r;\n    return y(t, (n) => {\n      const o = a.get(n);\n      return o === null ? void 0 : o;\n    });\n  });\n}\nfunction m(t) {\n  for (const e in t)\n    t[e] = [b(e), t[e]];\n  return t;\n}\nconst U = (t) => {\n  const e = g(), r = g(!0), a = u(), n = u(!0), o = A(!0), c = l(m({\n    addedToAttachmentMenu: o,\n    allowsWriteToPm: o,\n    firstName: a,\n    id: e,\n    isBot: o,\n    isPremium: o,\n    languageCode: n,\n    lastName: n,\n    photoUrl: n,\n    username: n\n  }), \"User\")(!0);\n  return P(\n    m({\n      authDate: D(),\n      canSendAfter: r,\n      chat: l(\n        m({\n          id: e,\n          type: a,\n          title: a,\n          photoUrl: n,\n          username: n\n        }),\n        \"Chat\"\n      )(!0),\n      chatInstance: n,\n      chatType: n,\n      hash: a,\n      queryId: n,\n      receiver: c,\n      startParam: n,\n      user: c\n    }),\n    \"initData\"\n  )(t);\n};\nfunction N(t) {\n  return /^#[\\da-f]{6}$/i.test(t);\n}\nfunction O(t) {\n  return /^#[\\da-f]{3}$/i.test(t);\n}\nfunction W(t) {\n  const e = t.replace(/\\s/g, \"\").toLowerCase();\n  if (N(e))\n    return e;\n  if (O(e)) {\n    let a = \"#\";\n    for (let n = 0; n < 3; n += 1)\n      a += e[1 + n].repeat(2);\n    return a;\n  }\n  const r = e.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || e.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!r)\n    throw new Error(`Value \"${t}\" does not satisfy any of known RGB formats.`);\n  return r.slice(1).reduce((a, n) => {\n    const o = parseInt(n, 10).toString(16);\n    return a + (o.length === 1 ? \"0\" : \"\") + o;\n  }, \"#\");\n}\nconst _ = s(\"rgb\", (t) => W(u()(t))), T = s(\n  \"themeParams\",\n  (t) => {\n    const e = _(!0);\n    return Object.entries(d(t)).reduce((r, [a, n]) => (r[E(a)] = e(n), r), {});\n  }\n);\n// @__NO_SIDE_EFFECTS__\nfunction V(t) {\n  return JSON.stringify(\n    Object.fromEntries(\n      Object.entries(t).map(([e, r]) => [b(e), r])\n    )\n  );\n}\nconst $ = (t) => {\n  const e = u(), r = u(!0), a = A(!0);\n  return P({\n    botInline: [\"tgWebAppBotInline\", a],\n    initData: [\"tgWebAppData\", U(!0)],\n    initDataRaw: [\"tgWebAppData\", r],\n    platform: [\"tgWebAppPlatform\", e],\n    showSettings: [\"tgWebAppShowSettings\", a],\n    startParam: [\"tgWebAppStartParam\", r],\n    themeParams: [\"tgWebAppThemeParams\", T()],\n    version: [\"tgWebAppVersion\", e]\n  }, \"launchParams\")(t);\n};\n// @__NO_SIDE_EFFECTS__\nfunction j(t) {\n  const { initDataRaw: e, startParam: r, showSettings: a, botInline: n } = t, o = new URLSearchParams();\n  return o.set(\"tgWebAppPlatform\", t.platform), o.set(\"tgWebAppThemeParams\", /* @__PURE__ */ V(t.themeParams)), o.set(\"tgWebAppVersion\", t.version), e && o.set(\"tgWebAppData\", e), r && o.set(\"tgWebAppStartParam\", r), typeof a == \"boolean\" && o.set(\"tgWebAppShowSettings\", a ? \"1\" : \"0\"), typeof n == \"boolean\" && o.set(\"tgWebAppBotInline\", n ? \"1\" : \"0\"), o.toString();\n}\nconst L = l({\n  eventType: u(),\n  eventData: (t) => t\n}, \"miniAppsMessage\");\nfunction I(t, e) {\n  return s(e || \"array\", (r) => {\n    let a;\n    if (Array.isArray(r))\n      a = r;\n    else if (typeof r == \"string\")\n      try {\n        const n = JSON.parse(r);\n        Array.isArray(n) && (a = n);\n      } catch {\n      }\n    return a || f(r), a.map(t);\n  });\n}\nconst C = s(\"fn\", (t) => {\n  if (typeof t == \"function\")\n    return t;\n  f(t);\n});\nfunction B(t) {\n  return !!t && typeof t == \"object\" && !Array.isArray(t);\n}\nexport {\n  R as ERR_INVALID_VALUE,\n  h as ERR_PARSE,\n  w as ERR_UNEXPECTED_TYPE,\n  S as ERR_UNEXPECTED_VALUE,\n  I as array,\n  A as boolean,\n  s as createTransformerGen,\n  D as date,\n  C as fn,\n  U as initData,\n  N as isRGB,\n  O as isRGBShort,\n  B as isRecord,\n  $ as launchParams,\n  L as miniAppsMessage,\n  g as number,\n  l as object,\n  _ as rgb,\n  P as searchParams,\n  j as serializeLaunchParams,\n  V as serializeThemeParams,\n  u as string,\n  T as themeParams,\n  W as toRGB,\n  d as toRecord\n};\n//# sourceMappingURL=index.js.map\n","import { object, fn } from '@telegram-apps/transformers';\n\ninterface WithWebviewProxy {\n  TelegramWebviewProxy: {\n    postEvent: (...args: unknown[]) => unknown;\n  };\n}\n\nconst webViewProxy = object<WithWebviewProxy>({\n  TelegramWebviewProxy: object({ postEvent: fn() })(),\n});\n\n/**\n * Returns true in case, passed value contains path `TelegramWebviewProxy.postEvent` property and\n * `postEvent` is a function.\n * @param value - value to check.\n */\nexport function hasWebviewProxy<T>(value: T): value is T & WithWebviewProxy {\n  return webViewProxy().isValid(value);\n}\n","/**\n * @see https://stackoverflow.com/a/326076\n * @returns True, if current environment is iframe.\n */\nexport function isIframe(): boolean {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return true;\n  }\n}\n","var k = Object.defineProperty;\nvar I = (r, e, t) => e in r ? k(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;\nvar E = (r, e, t) => I(r, typeof e != \"symbol\" ? e + \"\" : e, t);\nclass d extends Error {\n  constructor(e, t, n) {\n    super(\n      typeof t == \"object\" ? t.message : t || e,\n      {\n        cause: typeof t == \"object\" ? t.cause : n\n      }\n    ), this.type = e, Object.setPrototypeOf(this, d.prototype);\n  }\n}\nfunction x(r, e, t) {\n  return r.addEventListener(e, t), () => r.removeEventListener(e, t);\n}\nfunction _(...r) {\n  const e = r.flat(1);\n  return [\n    e.push.bind(e),\n    () => {\n      e.forEach((t) => {\n        t();\n      });\n    }\n  ];\n}\nfunction F(r, e) {\n  return r instanceof d && r.type === e;\n}\nfunction m(r) {\n  return (e) => F(e, r);\n}\nconst R = \"ERR_ABORTED\", $ = \"ERR_CANCELED\", S = \"ERR_TIMED_OUT\";\nfunction C(r) {\n  return new d(R, { cause: r });\n}\nconst U = m(S), V = m(R), B = m($);\nfunction T(r, e) {\n  return r.reject = e.reject, r;\n}\nclass i extends Promise {\n  constructor(t, n) {\n    let o, s;\n    typeof t == \"function\" ? (o = t, s = n) : s = t;\n    let u, c;\n    super((a, h) => {\n      s || (s = {});\n      const { abortSignal: l } = s;\n      if (l && l.aborted)\n        return h(C(l.reason));\n      const [y, A] = _(), b = (f) => (...L) => (A(), f(...L)), w = new AbortController(), { signal: D } = w;\n      c = b((f) => {\n        w.abort(f), h(f);\n      }), u = b(a), l && y(\n        x(l, \"abort\", () => {\n          c(C(l.reason));\n        })\n      );\n      const { timeout: g } = s;\n      if (g) {\n        const f = setTimeout(() => {\n          c(new d(S, `Timeout reached: ${g}ms`));\n        }, g);\n        y(() => {\n          clearTimeout(f);\n        });\n      }\n      o && o(u, c, D);\n    });\n    /**\n     * Rejects the promise.\n     */\n    E(this, \"reject\");\n    this.reject = c;\n  }\n  /**\n   * Creates a new BetterPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new i((o, s, u) => {\n      try {\n        const c = t(u);\n        return c instanceof Promise ? c.then(o, s) : o(c);\n      } catch (c) {\n        s(c);\n      }\n    }, n);\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new i((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new i((n, o) => {\n      o(t);\n    });\n  }\n  /**\n   * Cancels the promise execution.\n   */\n  cancel() {\n    this.reject(new d($));\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return T(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return T(super.then(t, n), this);\n  }\n}\nfunction v(r, e) {\n  return r.resolve = e.resolve, r;\n}\nclass p extends i {\n  constructor(t, n) {\n    let o, s;\n    typeof t == \"function\" ? (o = t, s = n) : s = t;\n    let u;\n    super((c, a, h) => {\n      u = c, o && o(c, a, h);\n    }, s);\n    /**\n     * Resolves the promise.\n     */\n    E(this, \"resolve\");\n    this.resolve = u;\n  }\n  /**\n   * Creates a new EnhancedPromise instance using executor, resolving promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static withFn(t, n) {\n    return new p(\n      (o, s, u) => i.withFn(t, { abortSignal: u }).then(o, s),\n      n\n    );\n  }\n  /**\n   * @see Promise.resolve\n   */\n  static resolve(t) {\n    return new p((n) => {\n      n(t);\n    });\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new p((n, o) => {\n      o(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return v(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return v(super.then(t, n), this);\n  }\n}\nfunction Z(r, e) {\n  return new i((t) => {\n    setTimeout(t, r);\n  }, { abortSignal: e });\n}\nfunction j(r) {\n  return `tapps/${r}`;\n}\nfunction J(r, e) {\n  sessionStorage.setItem(j(r), JSON.stringify(e));\n}\nfunction K(r) {\n  const e = sessionStorage.getItem(j(r));\n  try {\n    return e ? JSON.parse(e) : void 0;\n  } catch {\n  }\n}\nfunction M(r) {\n  return r.replace(/[A-Z]/g, (e) => `-${e.toLowerCase()}`);\n}\nfunction z(r) {\n  return r.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);\n}\nfunction G(r) {\n  return r.replace(/_[a-z]/g, (e) => e[1].toUpperCase());\n}\n// @__NO_SIDE_EFFECTS__\nfunction q(r, e) {\n  e || (e = {});\n  const {\n    textColor: t,\n    bgColor: n,\n    shouldLog: o = !0\n  } = e;\n  function s(u, ...c) {\n    if (!o || typeof o == \"function\" && !o())\n      return;\n    const a = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n    console[u](\n      `%c${Intl.DateTimeFormat(\"en-GB\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n        fractionalSecondDigits: 3,\n        timeZone: \"UTC\"\n      }).format(/* @__PURE__ */ new Date())}%c / %c${r}`,\n      `${a};background-color: lightblue;color:black`,\n      \"\",\n      `${a};${t ? `color:${t};` : \"\"}${n ? `background-color:${n}` : \"\"}`,\n      ...c\n    );\n  }\n  return [\n    function(...c) {\n      s(\"log\", ...c);\n    },\n    function(...c) {\n      s(\"error\", ...c);\n    }\n  ];\n}\nfunction H(r, e) {\n  document.documentElement.style.setProperty(r, e);\n}\nfunction P(r) {\n  document.documentElement.style.removeProperty(r);\n}\nexport {\n  i as CancelablePromise,\n  R as ERR_ABORTED,\n  $ as ERR_CANCELED,\n  S as ERR_TIMED_OUT,\n  p as EnhancedPromise,\n  d as TypedError,\n  x as addEventListener,\n  M as camelToKebab,\n  z as camelToSnake,\n  C as createAbortError,\n  _ as createCbCollector,\n  q as createLogger,\n  m as createTypedErrorPredicate,\n  P as deleteCssVar,\n  K as getStorageValue,\n  V as isAbortError,\n  B as isCanceledError,\n  F as isErrorOfType,\n  U as isTimeoutError,\n  H as setCssVar,\n  J as setStorageValue,\n  Z as sleep,\n  G as snakeToCamel\n};\n//# sourceMappingURL=index.js.map\n","let i;\nfunction y(e, s) {\n  i && i.set(e, s) || s();\n}\nfunction m(e) {\n  if (i)\n    return e();\n  i = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    i.forEach((s) => s()), i = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction S(e, s) {\n  s || (s = {});\n  const d = s.equals || Object.is;\n  let n = [], c = e;\n  const a = (t) => {\n    if (!d(c, t)) {\n      const u = c;\n      c = t, y(l, () => {\n        [...n].forEach(([f, g]) => {\n          f(t, u), g && r(f, !0);\n        });\n      });\n    }\n  };\n  function o(t) {\n    const u = typeof t != \"object\" ? { once: t } : t;\n    return {\n      once: u.once || !1,\n      signal: u.signal || !1\n    };\n  }\n  const r = (t, u) => {\n    const f = o(u), g = n.findIndex(([h, p]) => h === t && p.once === f.once && p.signal === f.signal);\n    g >= 0 && n.splice(g, 1);\n  }, l = Object.assign(\n    function() {\n      return j(l), c;\n    },\n    {\n      destroy() {\n        n = [];\n      },\n      set: a,\n      reset() {\n        a(e);\n      },\n      sub(t, u) {\n        return n.push([t, o(u)]), () => r(t, u);\n      },\n      unsub: r,\n      unsubAll() {\n        n = n.filter((t) => t[1].signal);\n      }\n    }\n  );\n  return l;\n}\nconst b = [];\nfunction j(e) {\n  b.length && b[b.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction x(e, s) {\n  let d = /* @__PURE__ */ new Set();\n  const n = /* @__PURE__ */ S(a(), s);\n  function c() {\n    n.set(a());\n  }\n  function a() {\n    d.forEach((l) => l.unsub(c, { signal: !0 }));\n    const o = /* @__PURE__ */ new Set();\n    let r;\n    b.push(o);\n    try {\n      r = e();\n    } finally {\n      b.pop();\n    }\n    return o.forEach((l) => {\n      l.sub(c, { signal: !0 });\n    }), d = o, r;\n  }\n  return Object.assign(function() {\n    return n();\n  }, {\n    destroy: n.destroy,\n    sub: n.sub,\n    unsub: n.unsub,\n    unsubAll: n.unsubAll\n  });\n}\nexport {\n  m as batch,\n  x as computed,\n  S as signal\n};\n//# sourceMappingURL=index.js.map\n","import { signal } from '@telegram-apps/signals';\nimport { createLogger } from '@telegram-apps/toolkit';\n\n/**\n * The package debug mode.\n *\n * Enabling debug mode leads to printing additional messages in the console related to the\n * processes inside the package.\n */\nexport const $debug = signal(false);\n\nexport const [logInfo, logError] = createLogger('Bridge', {\n  bgColor: '#9147ff',\n  textColor: 'white',\n  shouldLog: $debug,\n});\n","import {\n  boolean,\n  createTransformerGen,\n  number,\n  object,\n  string,\n  type TransformerGen,\n} from '@telegram-apps/transformers';\n\nimport type { EventName, EventPayload } from '@/events/types/events.js';\n\n/**\n * Transformers for problematic Mini Apps events.\n */\nexport const transformers: { [E in EventName]?: TransformerGen<EventPayload<E>> } = {\n  clipboard_text_received: object({\n    req_id: string(),\n    data: (value) => (value === null ? value : string(true)(value)),\n  }, 'clipboard_text_received'),\n  custom_method_invoked: object({\n    req_id: string(),\n    result: (value) => value,\n    error: string(true),\n  }, 'custom_method_invoked'),\n  popup_closed: createTransformerGen('popup_closed', value => {\n    return value\n      ? object({\n        button_id: (value) => (\n          value === null || value === undefined ? undefined : string()(value)\n        ),\n      })()(value)\n      : {};\n  }),\n  viewport_changed: object({\n    height: number(),\n    width: (value) => (\n      value === null || value === undefined\n        ? window.innerWidth\n        : number()(value)\n    ),\n    is_state_stable: boolean(),\n    is_expanded: boolean(),\n  }, 'viewport_changed'),\n};","import { createCbCollector, addEventListener, type If, type IsNever } from '@telegram-apps/toolkit';\nimport { Signal, signal } from '@telegram-apps/signals';\nimport { miniAppsMessage, type MiniAppsMessage } from '@telegram-apps/transformers';\n\nimport { logError, logInfo } from '@/debug.js';\n\nimport { transformers } from '../transformers.js';\nimport type { EventPayload, EventName } from '../types/events.js';\n\nexport type LastEvent = {\n  [E in EventName]: [E, If<IsNever<EventPayload<E>>, undefined, EventPayload<E>>]\n}[EventName];\n\n/**\n * Creates window event listeners, tracking Mini Apps events and calling passed handler with their\n * data.\n * @param onEvent - event callback.\n */\nfunction defineListeners(onEvent: (event: LastEvent) => void): () => void {\n  const w = window;\n  const [, cleanup] = createCbCollector(\n    // Add \"resize\" event listener to make sure, we always have fresh viewport information.\n    // The desktop version of Telegram is sometimes not sending the \"viewport_changed\"\n    // event. For example, when the Main Button is shown. That's why we should\n    // add our own listener to make sure viewport information is always fresh.\n    // Issue: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/10\n    addEventListener(w, 'resize', () => {\n      onEvent(['viewport_changed', {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: true,\n        is_expanded: true,\n      }]);\n    }),\n    // Add listener, which handles events sent from the Telegram web application and also events\n    // generated by the local emitEvent function.\n    addEventListener(w, 'message', (event) => {\n      // Ignore non-parent window messages.\n      if (event.source !== w.parent) {\n        return;\n      }\n\n      // Parse incoming event data.\n      let message: MiniAppsMessage;\n      try {\n        message = miniAppsMessage()(event.data);\n      } catch {\n        // We ignore incorrect messages as they could be generated by any other code.\n        return;\n      }\n\n      const { eventType, eventData } = message;\n      const createTransformer = transformers[eventType as keyof typeof transformers];\n\n      try {\n        const transformed = createTransformer\n          ? createTransformer()(eventData)\n          : eventData;\n        logInfo('Event received:', transformed\n          ? { eventType, eventData: transformed }\n          : { eventType });\n        onEvent([eventType, transformed] as LastEvent);\n      } catch (cause) {\n        logError(\n          [\n            `An error occurred processing the \"${eventType}\" event from the Telegram application.`,\n            'Please, file an issue here:',\n            'https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose',\n          ].join('\\n'),\n          message,\n          cause,\n        );\n      }\n    }),\n  );\n\n  return cleanup;\n}\n\n/**\n * Last received event.\n */\nexport const $lastEvent = signal<LastEvent>();\n\n/**\n * Side effects listening cleanup function. It will be eventually set when some code tried\n * to retrieve the last event.\n */\nexport const $lastEventCleanup = signal<() => void>();\n\n/**\n * Retrieve last received Mini Apps event ensuring that external listeners were defined.\n */\nexport function lastEventSignal(): Signal<LastEvent | undefined> {\n  if (!$lastEventCleanup()) {\n    $lastEventCleanup.set(defineListeners($lastEvent.set));\n  }\n  return $lastEvent;\n}\n\n","import { type Signal, signal } from '@telegram-apps/signals';\n\nimport { lastEventSignal } from '@/events/listening/lastEvent.js';\nimport type { EventName } from '@/events/types/events.js';\nimport type { SignalPayload } from '@/events/listening/types.js';\n\ntype CachedSignal<E extends EventName> = Signal<SignalPayload<E>>;\ntype Cache = {\n  [E in EventName]?: CachedSignal<E>\n};\n\nexport const $eventSignalsCache = signal<Cache>({});\n\n/**\n * Returns a signal for specified event using cache.\n * @param event - event name.\n */\nexport function signalFor<E extends EventName>(event: E): CachedSignal<E> {\n  let cached = $eventSignalsCache()[event];\n  if (!cached) {\n    // This is the special symbol we use to notify signal, that nothing changed, and the current\n    // value should be preserved.\n    cached = signal(undefined, {\n      equals() {\n        // We may receive several undefined in a row. For example,\n        // in the main_button_pressed event.\n        return false;\n      },\n    }) as Cache[E];\n    lastEventSignal().sub(ev => {\n      if (ev && ev[0] === event) {\n        cached!.set(ev[1] as SignalPayload<E>);\n      }\n    });\n\n    $eventSignalsCache.set({ ...$eventSignalsCache(), [event]: cached });\n  }\n\n  return cached as CachedSignal<E>;\n}","import type { RemoveListenerFn } from '@telegram-apps/signals';\n\nimport { signalFor } from '@/events/listening/signalFor.js';\nimport type { EventName } from '@/events/types/events.js';\nimport type { EventListener } from '@/events/listening/types.js';\n\n/**\n * Adds a new listener to the specified event.\n * @param event - event name.\n * @param listener - event listener.\n * @param once - should listener be called only once.\n * @returns Function to remove bound event listener.\n */\nexport function on<E extends EventName>(\n  event: E,\n  listener: EventListener<E>,\n  once?: boolean,\n): RemoveListenerFn {\n  return signalFor(event).sub(listener, once);\n}","export const ERR_METHOD_UNSUPPORTED = 'ERR_METHOD_UNSUPPORTED';\nexport const ERR_RETRIEVE_LP_FAILED = 'ERR_RETRIEVE_LP_FAILED';\nexport const ERR_METHOD_PARAMETER_UNSUPPORTED = 'ERR_METHOD_PARAMETER_UNSUPPORTED';\nexport const ERR_UNKNOWN_ENV = 'ERR_UNKNOWN_ENV';\nexport const ERR_CUSTOM_METHOD_ERR_RESPONSE = 'ERR_INVOKE_CUSTOM_METHOD_RESPONSE';\n","import { signal } from '@telegram-apps/signals';\n\n/**\n * Target origin used by the `postEvent` method.\n *\n * You don't need to override this value until you know what you are doing.\n * @default 'https://web.telegram.org'\n */\nexport const $targetOrigin = signal('https://web.telegram.org');\n","import { fn, object } from '@telegram-apps/transformers';\nimport { TypedError } from '@telegram-apps/toolkit';\n\nimport { logInfo } from '@/debug.js';\nimport { isIframe } from '@/env/isIframe.js';\nimport { hasWebviewProxy } from '@/env/hasWebviewProxy.js';\nimport { ERR_UNKNOWN_ENV } from '@/errors.js';\nimport { $targetOrigin } from '@/methods/$targetOrigin.js';\nimport type {\n  MethodName,\n  MethodNameWithOptionalParams,\n  MethodNameWithoutParams,\n  MethodNameWithRequiredParams,\n  MethodParams,\n} from '@/methods/types/index.js';\n\nexport type PostEventFn = typeof postEvent;\n\n/**\n * Calls Mini Apps methods requiring parameters.\n * @param method - method name.\n * @param params - options along with params.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n */\nexport function postEvent<Method extends MethodNameWithRequiredParams>(\n  method: Method,\n  params: MethodParams<Method>,\n): void;\n\n/**\n * Calls Mini Apps methods accepting no parameters at all.\n * @param method - method name.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n */\nexport function postEvent(method: MethodNameWithoutParams): void;\n\n/**\n * Calls Mini Apps methods accepting optional parameters.\n * @param method - method name.\n * @param params - options along with params.\n * @throws {TypedError} ERR_UNKNOWN_ENV\n */\nexport function postEvent<Method extends MethodNameWithOptionalParams>(\n  method: Method,\n  params?: MethodParams<Method>,\n): void;\n\nexport function postEvent(\n  eventType: MethodName,\n  eventData?: MethodParams<MethodName>,\n): void {\n  logInfo('Posting event:', eventData ? { eventType, eventData } : { eventType });\n\n  const w = window;\n\n  // Telegram for iOS and macOS.\n  if (hasWebviewProxy(w)) {\n    w.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n    return;\n  }\n\n  const message = JSON.stringify({ eventType, eventData });\n\n  // Telegram Web.\n  if (isIframe()) {\n    return w.parent.postMessage(message, $targetOrigin());\n  }\n\n  // Telegram for Windows Phone or Android.\n  const { external } = w;\n  if (object({ notify: fn() })().isValid(external)) {\n    external.notify(message);\n    return;\n  }\n\n  // Otherwise current environment is unknown, and we are not able to send event.\n  throw new TypedError(ERR_UNKNOWN_ENV);\n}\n","import {\n  CancelablePromise,\n  createCbCollector,\n  type If,\n  type IsNever,\n} from '@telegram-apps/toolkit';\n\nimport { on } from '@/events/listening/on.js';\nimport { postEvent } from '@/methods/postEvent.js';\nimport type {\n  MethodName,\n  MethodNameWithOptionalParams,\n  MethodNameWithoutParams,\n  MethodNameWithRequiredParams,\n  MethodParams,\n} from '@/methods/types/index.js';\nimport type { EventName, EventPayload } from '@/events/types/events.js';\nimport type { ExecuteWithOptions } from '@/types.js';\n\ntype AnyEventName = EventName | EventName[];\n\nexport type RequestCaptureFnEventsPayload<E extends EventName[]> = E extends (infer U extends EventName)[]\n  ? {\n    [K in U]: If<\n      IsNever<EventPayload<K>>,\n      { event: K },\n      { event: K; payload: EventPayload<K> }\n    >\n  }[U]\n  : never;\n\nexport type RequestCaptureEventsFn<E extends EventName[]> = (\n  payload: RequestCaptureFnEventsPayload<E>,\n) => boolean\n\nexport type RequestCaptureEventFn<E extends EventName> = If<\n  IsNever<EventPayload<E>>,\n  () => boolean,\n  (payload: EventPayload<E>) => boolean\n>;\n\nexport type RequestCaptureFn<E extends AnyEventName> = E extends EventName[]\n  ? RequestCaptureEventsFn<E>\n  : E extends EventName\n    ? RequestCaptureEventFn<E>\n    : never;\n\nexport interface RequestBasicOptions<E extends AnyEventName> extends ExecuteWithOptions {\n  /**\n   * Should return true if this event should be captured.\n   * The first compatible request will be captured if this property is omitted.\n   */\n  capture?: RequestCaptureFn<E>;\n}\n\nexport type RequestResult<E extends AnyEventName> =\n  E extends (infer U extends EventName)[]\n    ? U extends infer K extends EventName\n      ? If<IsNever<EventPayload<K>>, undefined, EventPayload<K>>\n      : never\n    : E extends EventName\n      ? If<IsNever<EventPayload<E>>, undefined, EventPayload<E>>\n      : never;\n\nexport type RequestFn = typeof request;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods, requiring parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithRequiredParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options: RequestBasicOptions<E> & { params: MethodParams<M> },\n): CancelablePromise<RequestResult<E>>;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods with optional parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithOptionalParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestBasicOptions<E> & { params?: MethodParams<M> },\n): CancelablePromise<RequestResult<E>>;\n\n/**\n * Performs a request waiting for specified events to occur.\n *\n * This overriding is used for methods without parameters.\n * @param method - method name.\n * @param eventOrEvents - tracked event or events.\n * @param options - additional options.\n */\nexport function request<M extends MethodNameWithoutParams, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestBasicOptions<E>,\n): CancelablePromise<RequestResult<E>>;\n\nexport function request<M extends MethodName, E extends AnyEventName>(\n  method: M,\n  eventOrEvents: E,\n  options?: RequestBasicOptions<E> & { params?: MethodParams<M> },\n): CancelablePromise<RequestResult<E>> {\n  options ||= {};\n  const { capture } = options;\n  const [addCleanup, cleanup] = createCbCollector();\n\n  return new CancelablePromise<RequestResult<E>>((resolve) => {\n    // We need to iterate over all tracked events and create their event listeners.\n    ((Array.isArray(eventOrEvents) ? eventOrEvents : [eventOrEvents])).forEach(event => {\n      // Each event listener waits for the event to occur.\n      // Then, if the capture function was passed, we should check if the event should be captured.\n      // If the function is omitted, we instantly capture the event.\n      addCleanup(\n        on(event, payload => {\n          if (!capture || (\n            Array.isArray(eventOrEvents)\n              ? (capture as RequestCaptureEventsFn<EventName[]>)({\n                event,\n                payload,\n              } as RequestCaptureFnEventsPayload<EventName[]>)\n              : (capture as RequestCaptureEventFn<EventName>)(payload)\n          )) {\n            resolve(payload as RequestResult<E>);\n          }\n        }),\n      );\n    });\n\n    (options.postEvent || postEvent)(method as any, (options as any).params);\n  }, options)\n    .finally(cleanup);\n}\n","import { launchParams, type LaunchParams } from '@telegram-apps/transformers';\n\n/**\n * Parses value as launch parameters.\n * @param value - value to parse.\n */\nexport function parseLaunchParams(value: unknown): LaunchParams {\n  return launchParams()(value);\n}\n","import type { LaunchParams } from '@telegram-apps/types';\n\nimport { parseLaunchParams } from './parseLaunchParams.js';\n\n/**\n * @param urlString - URL to extract launch parameters from.\n * @returns Launch parameters from the specified URL.\n * @throws Error if function was unable to extract launch parameters from the passed URL.\n */\nexport function retrieveFromUrl(urlString: string): LaunchParams {\n  return parseLaunchParams(\n    urlString\n      // Replace everything before this first hashtag or question sign.\n      .replace(/^[^?#]*[?#]/, '')\n      // Replace all hashtags and question signs to make it look like some search params.\n      .replace(/[?#]/g, '&'),\n  );\n}\n","import type { LaunchParams } from '@telegram-apps/types';\n\nimport { retrieveFromUrl } from './retrieveFromUrl.js';\n\n/**\n * @returns Launch parameters from the current window location hash.\n * @throws Error if function was unable to extract launch parameters from the window location hash.\n */\nexport function retrieveFromLocation(): LaunchParams {\n  return retrieveFromUrl(window.location.href);\n}\n","import type { LaunchParams } from '@telegram-apps/types';\n\nimport { retrieveFromUrl } from './retrieveFromUrl.js';\n\n/**\n * @returns Launch parameters based on the first navigation entry.\n * @throws Error if function was unable to extract launch parameters from the navigation entry.\n */\nexport function retrieveFromPerformance(): LaunchParams {\n  const navigationEntry = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming | undefined;\n  if (!navigationEntry) {\n    throw new Error('Unable to get first navigation entry.');\n  }\n\n  return retrieveFromUrl(navigationEntry.name);\n}\n","import { getStorageValue, setStorageValue } from '@telegram-apps/toolkit';\nimport { serializeLaunchParams } from '@telegram-apps/transformers';\nimport type { LaunchParams } from '@telegram-apps/types';\n\nimport { parseLaunchParams } from './parseLaunchParams.js';\n\nconst STORAGE_KEY = 'launchParams';\n\n/**\n * @returns Launch parameters stored in the session storage.\n * @throws Error if function was unable to extract launch parameters from the window location hash.\n */\nexport function retrieveFromStorage(): LaunchParams {\n  return parseLaunchParams(getStorageValue(STORAGE_KEY) || '');\n}\n\n/**\n * Saves specified launch parameters in the session storage.\n * @param value - launch params to save.\n */\nexport function saveToStorage(value: LaunchParams): void {\n  setStorageValue('launchParams', serializeLaunchParams(value));\n}\n","import type { LaunchParams } from '@telegram-apps/types';\nimport { TypedError } from '@telegram-apps/toolkit';\n\nimport { ERR_RETRIEVE_LP_FAILED } from '@/errors.js';\n\nimport { retrieveFromLocation } from './retrieveFromLocation.js';\nimport { retrieveFromPerformance } from './retrieveFromPerformance.js';\nimport { retrieveFromStorage, saveToStorage } from './storage.js';\n\nfunction unwrapError(e: unknown): string {\n  if (e instanceof Error) {\n    return e.message + (e.cause ? `\\n  ${unwrapError(e.cause)}` : '');\n  }\n  return JSON.stringify(e);\n}\n\n/**\n * @returns Launch parameters from any known source.\n * @throws {TypedError} ERR_RETRIEVE_LP_FAILED\n */\nexport function retrieveLaunchParams(): LaunchParams {\n  const errors: unknown[] = [];\n\n  for (const retrieve of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    retrieveFromLocation,\n    // Then, try using the lower level API - window.performance.\n    retrieveFromPerformance,\n    // Finally, try to extract launch parameters from the session storage.\n    retrieveFromStorage,\n  ]) {\n    try {\n      const lp = retrieve();\n      saveToStorage(lp);\n      return lp;\n    } catch (e) {\n      errors.push(e);\n    }\n  }\n\n  throw new TypedError(ERR_RETRIEVE_LP_FAILED, [\n    'Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?',\n    '📖 Refer to docs for more information:',\n    'https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment',\n    'Collected errors:',\n    ...errors.map(e => `— ${unwrapError(e)}`),\n  ].join('\\n'));\n}\n","import { CancelablePromise, type AsyncOptions } from '@telegram-apps/toolkit';\n\nimport { request } from '@/utils/request.js';\nimport { hasWebviewProxy } from '@/env/hasWebviewProxy.js';\nimport { retrieveLaunchParams } from '@/launch-params/retrieveLaunchParams.js';\n\n/**\n * Returns true if the current environment is Telegram Mini Apps.\n *\n * It uses the `retrieveLaunchParams` function to determine if the environment contains\n * launch parameters. In case it does, true will be returned.\n *\n * In case you need stricter checks, use async override of this function.\n */\nexport function isTMA(type: 'simple'): boolean;\n\n/**\n * Returns promise with true if the current environment is Telegram Mini Apps.\n *\n * First of all, it checks if the current environment contains traits specific to the\n * Mini Apps environment.\n * Then, it attempts to call a Mini Apps method and waits for a response to be received.\n *\n * In case you need less strict checks, use sync override of this function.\n */\nexport function isTMA(options?: AsyncOptions): CancelablePromise<boolean>\n\nexport function isTMA(optionsOrType?: AsyncOptions | 'simple'): boolean | CancelablePromise<boolean> {\n  if (optionsOrType === 'simple') {\n    try {\n      retrieveLaunchParams();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  return CancelablePromise.withFn(async () => {\n    if (hasWebviewProxy(window)) {\n      return true;\n    }\n    try {\n      await request('web_app_request_theme', 'theme_changed', { timeout: 100 });\n      return true;\n    } catch {\n      return false;\n    }\n  }, optionsOrType);\n}\n","/**\n * Emits an event sent from the Telegram native application like it was sent in a default web\n * environment between two iframes.\n *\n * It dispatches a new MessageEvent and expects it to be handled via\n * the `window.addEventListener('message', ...)` call, as a developer would do it to handle\n * messages sent from the parent iframe.\n * @param eventType - event name.\n * @param eventData - event payload.\n */\nexport function emitMiniAppsEvent(eventType: string, eventData?: unknown): void {\n  window.dispatchEvent(new MessageEvent('message', {\n    data: JSON.stringify({ eventType, eventData }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent,\n  }));\n}","import {\n  miniAppsMessage,\n  serializeThemeParams,\n  type ThemeParams,\n} from '@telegram-apps/transformers';\nimport type { LaunchParams } from '@telegram-apps/types';\n\nimport { parseLaunchParams } from '@/launch-params/parseLaunchParams.js';\nimport { saveToStorage } from '@/launch-params/storage.js';\nimport { logInfo } from '@/debug.js';\nimport { emitMiniAppsEvent } from '@/events/emitMiniAppsEvent.js';\nimport type { EventPayload } from '@/events/types/index.js';\n\n/**\n * Intercepts the window.parent.postMessage call and performs pre-defined actions. For example,\n * it may handle the request theme request and emit the theme_changed event.\n * @param tp - theme params.\n * @param data - postMessage data.\n */\nfunction imitatePostEvent(tp: ThemeParams, data: unknown): void {\n  if (typeof data !== 'string') {\n    return;\n  }\n  try {\n    const { eventType } = miniAppsMessage()(data);\n\n    if (eventType === 'web_app_request_theme') {\n      emitMiniAppsEvent('theme_changed', {\n        theme_params: JSON.parse(serializeThemeParams(tp)),\n      } satisfies EventPayload<'theme_changed'>);\n    }\n\n    if (eventType === 'web_app_request_viewport') {\n      emitMiniAppsEvent('viewport_changed', {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        is_state_stable: true,\n        is_expanded: true,\n      } satisfies EventPayload<'viewport_changed'>);\n    }\n  } catch {\n  }\n}\n\n/**\n * Mocks a Telegram application environment.\n * @param launchParamsRaw - launch parameters presented as a string or query parameters.\n */\nexport function mockTelegramEnv(launchParamsRaw: LaunchParams | string): void {\n  const lp = typeof launchParamsRaw === 'string'\n    ? parseLaunchParams(launchParamsRaw)\n    : launchParamsRaw;\n\n  // Save launch params in the storage, so retrieveLaunchParams will return them.\n  saveToStorage(lp);\n\n  // Define a special port, expected by the postEvent function.\n  const proxyPostEvent = (window as any).TelegramWebviewProxy?.postEvent;\n  (window as any).TelegramWebviewProxy = {\n    postEvent(eventType: string, eventData: string) {\n      imitatePostEvent(lp.themeParams, JSON.stringify({ eventType, eventData }));\n      proxyPostEvent?.(eventType, eventData);\n    },\n  };\n\n  logInfo('Environment was mocked by the mockTelegramEnv function');\n}","import { emitMiniAppsEvent } from '@/events/emitMiniAppsEvent.js';\n\n/**\n * Defines special handlers by known paths, which Telegram recognizes as ports to receive events.\n */\nexport function defineEventHandlers() {\n  // Iterate over each path, where \"receiveEvent\" function should be\n  // defined. This function is called by external environment in case,\n  // it wants to emit some event.\n  [\n    ['TelegramGameProxy_receiveEvent'], // Windows Phone.\n    ['TelegramGameProxy', 'receiveEvent'], // Desktop.\n    ['Telegram', 'WebView', 'receiveEvent'], // Android and iOS.\n  ].forEach((path) => {\n    // Path starts from the \"window\" object.\n    let pointer = window as Record<string, any>;\n\n    path.forEach((item, idx, arr) => {\n      // We are on the last iteration, where function property name is passed.\n      if (idx === arr.length - 1) {\n        pointer[item] = emitMiniAppsEvent;\n        return;\n      }\n\n      if (!(item in pointer)) {\n        pointer[item] = {};\n      }\n      pointer = pointer[item];\n    });\n  });\n}\n","/**\n * Removes global event handlers, used by the package.\n */\nexport function removeEventHandlers(): void {\n  ['TelegramGameProxy_receiveEvent', 'TelegramGameProxy', 'Telegram'].forEach((prop) => {\n    delete window[prop as keyof Window];\n  });\n}","import { signalFor } from '@/events/listening/signalFor.js';\nimport type { EventName } from '@/events/types/events.js';\nimport type { EventListener } from '@/events/listening/types.js';\n\n/**\n * Removes the listener from the specified event.\n * @param event - event to listen.\n * @param listener - event listener to remove.\n * @param once - had this listener to be called only once.\n */\nexport function off<E extends EventName>(\n  event: E,\n  listener: EventListener<E>,\n  once?: boolean,\n): void {\n  signalFor(event).unsub(listener, once);\n}\n","import type { RemoveListenerFn } from '@telegram-apps/signals';\n\nimport { lastEventSignal } from '@/events/listening/lastEvent.js';\nimport type { SubscribeListener } from '@/events/listening/types.js';\n\n/**\n * Subscribes to all events sent from the native Telegram application.\n * @param listener - event listener to bind.\n * @param once - should this listener be called only once.\n * @returns Function to remove bound event listener.\n */\nexport function subscribe(listener: SubscribeListener, once?: boolean): RemoveListenerFn {\n  return lastEventSignal().sub(listener, once);\n}\n","import type { SubscribeListenerFn } from '@telegram-apps/signals';\n\nimport { $lastEvent, LastEvent } from '@/events/listening/lastEvent.js';\n\n/**\n * Remove a subscriber listening to all events sent from the native Telegram application.\n * @param listener - event listener to remove.\n * @param once - had this listener to be called only once.\n * @returns Function to remove bound event listener.\n */\nexport function unsubscribe(\n  listener: SubscribeListenerFn<LastEvent | undefined>,\n  once?: boolean,\n): void {\n  $lastEvent.unsub(listener, once);\n}\n","type CaptureSameReqFn = (payload: { req_id: string }) => boolean;\n\n/**\n * Returns a function which can be used in `request` function `capture` property to capture\n * the event with the same request identifier.\n * @param reqId - request identifier.\n */\nexport function captureSameReq(reqId: string): CaptureSameReqFn {\n  return ({ req_id }) => req_id === reqId;\n}\n","import type { Version } from '@telegram-apps/types';\n\nfunction parts(a: Version): number[] {\n  return a.split('.').map(Number);\n}\n\n/**\n * @param a - first version.\n * @param b - second version.\n * @returns\n * - `1` if the version \"a\" is greater than \"b\".\n * - `0` the version \"a\" is equal to \"b\".\n * - `-1` the version \"a\" is lower than \"b\".\n */\nexport function compareVersions(a: Version, b: Version): number {\n  const aParts = parts(a);\n  const bParts = parts(b);\n  const len = Math.max(aParts.length, bParts.length);\n\n  // Iterate over each part of versions and compare them. In case, part is\n  // missing, assume its value is equal to 0.\n  for (let i = 0; i < len; i += 1) {\n    const aVal = aParts[i] || 0\n    const bVal = bParts[i] || 0;\n\n    if (aVal === bVal) {\n      continue;\n    }\n    return aVal > bVal ? 1 : -1;\n  }\n  return 0;\n}\n","import type { Version } from '@telegram-apps/types';\n\nimport { compareVersions } from '@/utils/compareVersions.js';\nimport type {\n  MethodName,\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n} from '@/methods/types/index.js';\n\n/**\n * Returns true if \"a\" version is less than or equal to \"b\" version.\n * @param a\n * @param b\n */\nfunction versionLessOrEqual(a: Version, b: Version): boolean {\n  return compareVersions(a, b) <= 0;\n}\n\n/**\n * Returns true in case, passed parameter in specified method is supported.\n * @param method - method name\n * @param param - method parameter\n * @param inVersion - platform version.\n */\nexport function supports<M extends MethodNameWithVersionedParams>(\n  method: M,\n  param: MethodVersionedParams<M>,\n  inVersion: Version,\n): boolean;\n\n/**\n * Returns true in case, specified method is supported in a passed version.\n * @param method - method name.\n * @param inVersion - platform version.\n */\nexport function supports(method: MethodName, inVersion: Version): boolean;\n\nexport function supports(\n  method: MethodName,\n  paramOrVersion: Version | string,\n  inVersion?: string,\n): boolean {\n  // Method name, parameter, target version.\n  if (typeof inVersion === 'string') {\n    if (method === 'web_app_open_link') {\n      if (paramOrVersion === 'try_instant_view') {\n        return versionLessOrEqual('6.4', inVersion);\n      }\n      if (paramOrVersion === 'try_browser') {\n        return versionLessOrEqual('7.6', inVersion);\n      }\n    }\n\n    if (method === 'web_app_set_header_color') {\n      if (paramOrVersion === 'color') {\n        return versionLessOrEqual('6.9', inVersion);\n      }\n    }\n\n    if (method === 'web_app_close' && paramOrVersion === 'return_back') {\n      return versionLessOrEqual('7.6', inVersion);\n    }\n\n    if (method === 'web_app_setup_main_button' && paramOrVersion === 'has_shine_effect') {\n      return versionLessOrEqual('7.10', inVersion);\n    }\n  }\n\n  switch (method) {\n    case 'web_app_open_tg_link':\n    case 'web_app_open_invoice':\n    case 'web_app_setup_back_button':\n    case 'web_app_set_background_color':\n    case 'web_app_set_header_color':\n    case 'web_app_trigger_haptic_feedback':\n      return versionLessOrEqual('6.1', paramOrVersion);\n    case 'web_app_open_popup':\n      return versionLessOrEqual('6.2', paramOrVersion);\n    case 'web_app_close_scan_qr_popup':\n    case 'web_app_open_scan_qr_popup':\n    case 'web_app_read_text_from_clipboard':\n      return versionLessOrEqual('6.4', paramOrVersion);\n    case 'web_app_switch_inline_query':\n      return versionLessOrEqual('6.7', paramOrVersion);\n    case 'web_app_invoke_custom_method':\n    case 'web_app_request_write_access':\n    case 'web_app_request_phone':\n      return versionLessOrEqual('6.9', paramOrVersion);\n    case 'web_app_setup_settings_button':\n      return versionLessOrEqual('6.10', paramOrVersion);\n    case 'web_app_biometry_get_info':\n    case 'web_app_biometry_open_settings':\n    case 'web_app_biometry_request_access':\n    case 'web_app_biometry_request_auth':\n    case 'web_app_biometry_update_token':\n      return versionLessOrEqual('7.2', paramOrVersion);\n    case 'web_app_setup_swipe_behavior':\n      return versionLessOrEqual('7.7', paramOrVersion);\n    case 'web_app_setup_secondary_button':\n    case 'web_app_set_bottom_bar_color':\n      return versionLessOrEqual('7.10', paramOrVersion);\n    default:\n      return [\n        'iframe_ready',\n        'iframe_will_reload',\n        'web_app_close',\n        'web_app_data_send',\n        'web_app_expand',\n        'web_app_open_link',\n        'web_app_ready',\n        'web_app_request_theme',\n        'web_app_request_viewport',\n        'web_app_setup_main_button',\n        'web_app_setup_closing_behavior',\n      ].includes(method);\n  }\n}\n","import { isRecord } from '@telegram-apps/transformers';\nimport { TypedError } from '@telegram-apps/toolkit';\nimport type { Version } from '@telegram-apps/types';\n\nimport { ERR_METHOD_PARAMETER_UNSUPPORTED, ERR_METHOD_UNSUPPORTED } from '@/errors.js';\nimport { supports } from '@/methods/supports.js';\nimport { type PostEventFn, postEvent } from '@/methods/postEvent.js';\nimport type {\n  MethodName,\n  MethodNameWithVersionedParams,\n  MethodVersionedParams,\n} from '@/methods/types/index.js';\n\nexport type OnUnsupportedFn = (\n  data: { version: Version } & (\n    | { method: MethodName }\n    | {\n    [M in MethodNameWithVersionedParams]: {\n      method: M;\n      param: MethodVersionedParams<M>;\n    };\n  }[MethodNameWithVersionedParams]),\n) => void;\n\nexport type CreatePostEventMode = 'strict' | 'non-strict';\n\n/**\n * Creates a function which checks if specified method and parameters are supported.\n *\n * If method or parameters are unsupported, the `onUnsupported` function will be called.\n *\n * If `strict` or `non-strict` value was passed as the second argument, the function\n * will create its own `onUnsupported` function with behavior depending on the value passed.\n *\n * - Passing `strict` will make function to throw a `TypedError` error\n * with `ERR_METHOD_UNSUPPORTED` or `ERR_METHOD_PARAMETER_UNSUPPORTED` type.\n * - Passing `non-strict` will just warn you about something being unsupported.\n *\n * @param version - Telegram Mini Apps version.\n * @param onUnsupportedOrMode - function or strict mode. Default: `strict`\n */\nexport function createPostEvent(\n  version: Version,\n  onUnsupportedOrMode?: OnUnsupportedFn | CreatePostEventMode,\n): PostEventFn {\n  onUnsupportedOrMode ||= 'strict';\n  const onUnsupported: OnUnsupportedFn = typeof onUnsupportedOrMode === 'function'\n    ? onUnsupportedOrMode\n    : data => {\n      const { method, version } = data;\n      let message: string;\n      let error: string;\n\n      if ('param' in data) {\n        message = `Parameter \"${data.param}\" of \"${method}\" method is unsupported in Mini Apps version ${version}`;\n        error = ERR_METHOD_PARAMETER_UNSUPPORTED;\n      } else {\n        message = `Method \"${method}\" is unsupported in Mini Apps version ${version}`;\n        error = ERR_METHOD_UNSUPPORTED;\n      }\n\n      if (onUnsupportedOrMode === 'strict') {\n        throw new TypedError(error, message);\n      }\n      return console.warn(message);\n    };\n\n  return ((method: any, params: any) => {\n    // Firstly, check if a method is supported.\n    if (!supports(method, version)) {\n      return onUnsupported({ version, method });\n    }\n\n    // Method could use parameters, which are supported only in specific versions of Mini Apps.\n    // We are validating only those parameters, which are not backward compatible.\n    if (\n      isRecord(params)\n      && method === 'web_app_set_header_color'\n      && 'color' in params\n      && !supports(method, 'color', version)\n    ) {\n      return onUnsupported({ version, method, param: 'color' });\n    }\n\n    return postEvent(method, params);\n  }) as PostEventFn;\n}\n","import { CancelablePromise, TypedError } from '@telegram-apps/toolkit';\n\nimport { ERR_CUSTOM_METHOD_ERR_RESPONSE } from '@/errors.js';\nimport { captureSameReq } from '@/methods/captureSameReq.js';\nimport type { ExecuteWithOptions } from '@/types.js';\nimport type { CustomMethodName, CustomMethodParams } from '@/methods/types/index.js';\n\nimport { request } from './request.js';\n\n/**\n * Invokes known custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param requestId - request identifier.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod<M extends CustomMethodName>(\n  method: M,\n  params: CustomMethodParams<M>,\n  requestId: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\n/**\n * Invokes unknown custom method. Returns method execution result.\n * @param method - method name.\n * @param params - method parameters.\n * @param requestId - request identifier.\n * @param options - additional options.\n * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE\n */\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  requestId: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown>;\n\nexport function invokeCustomMethod(\n  method: string,\n  params: object,\n  requestId: string,\n  options?: ExecuteWithOptions,\n): CancelablePromise<unknown> {\n  return request('web_app_invoke_custom_method', 'custom_method_invoked', {\n    ...options || {},\n    params: { method, params, req_id: requestId },\n    capture: captureSameReq(requestId),\n  })\n    .then(({ result, error }) => {\n      if (error) {\n        throw new TypedError(ERR_CUSTOM_METHOD_ERR_RESPONSE, error);\n      }\n      return result;\n    });\n}\n","import type { Signal } from '@telegram-apps/signals';\n\nimport { $eventSignalsCache } from '@/events/listening/signalFor.js';\nimport { $lastEvent, $lastEventCleanup } from '@/events/listening/lastEvent.js';\nimport { $targetOrigin } from '@/methods/$targetOrigin.js';\nimport { $debug } from '@/debug.js';\n\nfunction resetSignal(s: Signal<any>): void {\n  s.unsubAll();\n  s.reset();\n}\n\n/**\n * Resets the package state. Normally, you don't use this function in your application.\n * We are using it only for test purposes.\n */\nexport function resetPackageState() {\n  $lastEventCleanup()?.();\n\n  [\n    ...Object.values($eventSignalsCache()),\n    $eventSignalsCache,\n    $lastEvent,\n    $lastEventCleanup,\n    $targetOrigin,\n    $debug,\n  ].forEach(resetSignal);\n}"],"names":["i","e","r","a","b","t","E","R","S","w","h","y","n","o","c","p","d","s","l","f","A","u","g","D","P","m","U","N","O","W","_","T","V","$","j","L","C","B","webViewProxy","object","fn","hasWebviewProxy","value","isIframe","k","I","F","v","Z","J","K","M","z","G","q","H","$debug","signal","logInfo","logError","createLogger","transformers","string","createTransformerGen","number","boolean","defineListeners","onEvent","cleanup","createCbCollector","addEventListener","event","message","miniAppsMessage","eventType","eventData","createTransformer","transformed","cause","$lastEvent","$lastEventCleanup","lastEventSignal","$eventSignalsCache","signalFor","cached","ev","on","listener","once","ERR_METHOD_UNSUPPORTED","ERR_RETRIEVE_LP_FAILED","ERR_METHOD_PARAMETER_UNSUPPORTED","ERR_UNKNOWN_ENV","ERR_CUSTOM_METHOD_ERR_RESPONSE","$targetOrigin","postEvent","external","TypedError","request","method","eventOrEvents","options","capture","addCleanup","CancelablePromise","resolve","payload","parseLaunchParams","launchParams","retrieveFromUrl","urlString","retrieveFromLocation","retrieveFromPerformance","navigationEntry","STORAGE_KEY","retrieveFromStorage","getStorageValue","saveToStorage","setStorageValue","serializeLaunchParams","unwrapError","retrieveLaunchParams","errors","retrieve","lp","isTMA","optionsOrType","emitMiniAppsEvent","imitatePostEvent","tp","data","serializeThemeParams","mockTelegramEnv","launchParamsRaw","proxyPostEvent","_a","defineEventHandlers","path","pointer","item","idx","arr","removeEventHandlers","prop","off","subscribe","unsubscribe","captureSameReq","reqId","req_id","parts","compareVersions","aParts","bParts","len","aVal","bVal","versionLessOrEqual","supports","paramOrVersion","inVersion","createPostEvent","version","onUnsupportedOrMode","onUnsupported","error","params","isRecord","invokeCustomMethod","requestId","result","resetSignal","resetPackageState"],"mappings":"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"}